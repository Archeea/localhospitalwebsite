{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\email\\\\OneDrive\\\\Desktop\\\\currentcounterfthwbst\\\\frontend\\\\src\\\\Components\\\\Gallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './Gallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [{\n  original: require('./galleryimages/banner.jpg'),\n  thumbnail: require('./galleryimages/banner.jpg')\n  // Other image properties like alt text, caption, etc.\n}, {\n  original: require('./galleryimages/heart.png'),\n  thumbnail: require('./galleryimages/heart.png')\n  // Other image properties like alt text, caption, etc.\n}, {\n  original: require('./galleryimages/rad.png'),\n  thumbnail: require('./galleryimages/rad.png')\n  // Other image properties like alt text, caption, etc.\n}];\n\nconst Gallery = () => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\n  const handleThumbnailClick = index => {\n    setSelectedImageIndex(index);\n    setModalIsOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery\",\n    children: [/*#__PURE__*/_jsxDEV(ImageGallery, {\n      items: images,\n      renderItem: item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-thumbnail\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.originalAlt,\n          onClick: () => handleThumbnailClick(item.index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this),\n      showPlayButton: false,\n      showFullscreenButton: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"modal-image\",\n          src: images[selectedImageIndex].original,\n          alt: images[selectedImageIndex].originalAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"FFj6LSkDnr8GBshXKOsAU1vK8Lo=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","ImageGallery","jsxDEV","_jsxDEV","images","original","require","thumbnail","Gallery","_s","modalIsOpen","setModalIsOpen","selectedImageIndex","setSelectedImageIndex","handleThumbnailClick","index","handleCloseModal","className","children","items","renderItem","item","src","alt","originalAlt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","showPlayButton","showFullscreenButton","_c","$RefreshReg$"],"sources":["C:/Users/email/OneDrive/Desktop/currentcounterfthwbst/frontend/src/Components/Gallery.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport './Gallery.css';\r\n\r\nconst images = [\r\n  {\r\n    original: require('./galleryimages/banner.jpg'),\r\n    thumbnail: require('./galleryimages/banner.jpg'),\r\n    // Other image properties like alt text, caption, etc.\r\n  },\r\n  {\r\n    original: require('./galleryimages/heart.png'),\r\n    thumbnail: require('./galleryimages/heart.png'),\r\n    // Other image properties like alt text, caption, etc.\r\n  },\r\n  {\r\n    original: require('./galleryimages/rad.png'),\r\n    thumbnail: require('./galleryimages/rad.png'),\r\n    // Other image properties like alt text, caption, etc.\r\n  },\r\n];\r\n\r\nconst Gallery = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\r\n\r\n  const handleThumbnailClick = (index) => {\r\n    setSelectedImageIndex(index);\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery\">\r\n      <ImageGallery\r\n        items={images}\r\n        renderItem={(item) => (\r\n          <div className=\"gallery-thumbnail\">\r\n            <img\r\n              src={item.thumbnail}\r\n              alt={item.originalAlt}\r\n              onClick={() => handleThumbnailClick(item.index)}\r\n            />\r\n          </div>\r\n        )}\r\n        showPlayButton={false}\r\n        showFullscreenButton={false}\r\n      />\r\n      {modalIsOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-button\" onClick={handleCloseModal}>\r\n              Close\r\n            </button>\r\n            <img\r\n              className=\"modal-image\"\r\n              src={images[selectedImageIndex].original}\r\n              alt={images[selectedImageIndex].originalAlt}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}